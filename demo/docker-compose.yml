version: '3'
services:
  nginx:
    image: nginx:latest
    ports:
      - 2402:443
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./localhost.crt:/certificate.crt
      - ./localhost.key:/private.key
    depends_on:
      - webserver
  postgresql:
    image: postgres:15
    volumes:
      - ./docker/pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: nostr
      POSTGRES_DB: saltivka_development
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 3s
      timeout: 5s
      retries: 5
    command:
      - "docker-entrypoint.sh"
      - "-c"
      - "max_connections=300"
      - "-c"
      - "shared_buffers=1280MB"
      - "-c"
      - "effective_cache_size=3840MB"
      - "-c"
      - "maintenance_work_mem=320MB"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=300"
      - "-c"
      - "work_mem=3276kB"
      - "-c"
      - "min_wal_size=2GB"
      - "-c"
      - "max_wal_size=8GB"
      - "-c"
      - "max_worker_processes=4"
      - "-c"
      - "max_parallel_workers_per_gather=2"
      - "-c"
      - "max_parallel_workers=4"
      - "-c"
      - "max_parallel_maintenance_workers=2"

  redis:
    image: redis/redis-stack-server:7.2.0-v0
    volumes:
      - ./docker/redis-data:/data
    environment:
      - REDIS_ARGS=--io-threads 1 --io-threads-do-reads no --appendonly no --maxmemory-policy noeviction --bind 0.0.0.0 --maxclients 10000 --tcp-backlog 511 # https://github.com/redis-stack/redis-stack/issues/110
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 3s
      timeout: 5s
      retries: 5
  sidekiq_redis:
    image: redis:7
    volumes:
      - ./docker/sidekiq-redis-data:/data
    command: redis-server --io-threads 1 --io-threads-do-reads no --appendonly yes --maxmemory-policy noeviction --bind 0.0.0.0 --maxclients 10000 --tcp-backlog 511
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 3s
      timeout: 5s
      retries: 5
  db-migration:
    build:
      context: ..
    env_file: ./.env
    command: sh -c "until bundle exec rails db:migrate db:seed; do sleep 5; done"
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      sidekiq_redis:
        condition: service_healthy

  webserver:
    build:
      context: ..
    restart: unless-stopped
    env_file: ./.env
    ports:
      - 3000:3000
    depends_on:
      db-migration:
        condition: service_completed_successfully
  worker:
    build:
      context: ..
    restart: unless-stopped
    env_file: ./.env
    command: bin/worker
    depends_on:
      db-migration:
        condition: service_completed_successfully
  scheduler:
    build:
      context: ..
    restart: unless-stopped
    env_file: ./.env
    command: bin/scheduler
    depends_on:
      db-migration:
        condition: service_completed_successfully
  mirrors:
    build:
      context: ..
    restart: unless-stopped
    env_file: ./.env
    command: bin/mirrors
    depends_on:
      db-migration:
        condition: service_completed_successfully
